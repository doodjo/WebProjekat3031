// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Models;

namespace WebProjekat3031.Migrations
{
    [DbContext(typeof(SContext))]
    [Migration("20220322212907_V1")]
    partial class V1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Destinacija", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Grad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StanicaID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("StanicaID");

                    b.ToTable("Destinacije");
                });

            modelBuilder.Entity("Putnik", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("eMail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Putnici");
                });

            modelBuilder.Entity("Putovanje", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cena")
                        .HasColumnType("int");

                    b.Property<int>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<int>("PutnikID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.Property<string>("tipSedista")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("DestinacijaID");

                    b.HasIndex("PutnikID");

                    b.ToTable("Putovanja");
                });

            modelBuilder.Entity("Stanica", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Stanice");
                });

            modelBuilder.Entity("Termin", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DestinacijaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("Vreme")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("DestinacijaID");

                    b.ToTable("Termin");
                });

            modelBuilder.Entity("Destinacija", b =>
                {
                    b.HasOne("Stanica", "Stanica")
                        .WithMany("Destinacije")
                        .HasForeignKey("StanicaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stanica");
                });

            modelBuilder.Entity("Putovanje", b =>
                {
                    b.HasOne("Destinacija", "Destinacija")
                        .WithMany("Putovanja")
                        .HasForeignKey("DestinacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Putnik", "Putnik")
                        .WithMany("Putovanja")
                        .HasForeignKey("PutnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinacija");

                    b.Navigation("Putnik");
                });

            modelBuilder.Entity("Termin", b =>
                {
                    b.HasOne("Destinacija", "Destinacija")
                        .WithMany("Termini")
                        .HasForeignKey("DestinacijaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destinacija");
                });

            modelBuilder.Entity("Destinacija", b =>
                {
                    b.Navigation("Putovanja");

                    b.Navigation("Termini");
                });

            modelBuilder.Entity("Putnik", b =>
                {
                    b.Navigation("Putovanja");
                });

            modelBuilder.Entity("Stanica", b =>
                {
                    b.Navigation("Destinacije");
                });
#pragma warning restore 612, 618
        }
    }
}
